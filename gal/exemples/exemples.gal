Philosopher(Think){
  * (Think)
}

Mine(Banzai){
  * (Banzai)
  | Cell(F,E) ? Explode  :()
  | True ?               :(Banzai)
  * ()
}

Poule(Pondre){
  * (Pondre)
  | Cell(F,V) ? Egg(F)  :(Couver)

  * (Couver)
  | Cell(F,T) ? Move    :(Attendre)

  * (Attendre)
  | Cell(H,V) ?          :(Pondre)
}

Fire(Forward){
 * (Forward)
 | Cell(F,V) ? Move(F)    :(Copy)
 | Cell(F,O) ? Explode(H) :()
 | True      ?            :()

 * (Copy)
 | Cell(F,O) ? Explode(H) :()
 | Cell(B,V) ? Egg(B)     :(Forward)
}

Egyptologue(Explore){
 * (Explore)
 | Cell(H,C) ?          :()
 | Cell(F,V) ? Move(F)  :(Paint)
 | Cell(L,V) ? Turn(L)  :(Explore)
 | Cell(R,V) ? Turn(R)  :(Explore)
 | Cell(B,V) ? Turn(B)  :(Explore)

 * (Paint): True ? Pop(B) :(Explore)
}

PopOrWizz1(Init){
  * (Init): True ? 49%Pop / 49% Wizz / Power :(Init)
}

PopOrWizz2(State1){
  * (State1): True ? Pop  :(_)
  * (State2): True ? Wizz :(_)
}

Fourmi(Init){
 * (Init):
 | Cell(F,C) ? Move(F) :(Init)
 | Cell(R,C) ? Turn(R) :(Init)
 | Cell(L,C) ? Turn(L) :(Init)
 | Cell(F,V) ? Move    :(Init)
}

Blocker(Go){
* (Go):
    | Cell(F,V) ? Move :(Go)
    | True ?           :(Block)
* (Block)
}

Escape(Init){
* (Init):
  | Cell(N,V) & Cell(S,V) & Cell(E,V) & Cell(O,V) ? :(Init)
  | Cell(F,V) ? Move(F) :(Init)
  | Cell(L,V) ? Turn(L) :(Init)
  | Cell(R,V) ? Turn(R) :(Init)
  | Cell(B,V) ? Move(B) :(Init)
}

Player1(Init){
  * (Init):
  | Key(d) & Key(z) & !Cell(NE,O) ? Move(NE) :(Init)
  | Key(d) & Key(s) & !Cell(SE,O) ? Move(SE) :(Init)
  | Key(q) & Key(z) & !Cell(NW,O) ? Move(NW) :(Init)
  | Key(q) & Key(s) & !Cell(SW,O) ? Move(SW) :(Init)
  | Key(z) & !Cell(N,O) ? Move(N) :(Init)
  | Key(s) & !Cell(S,O) ? Move(S) :(Init)
  | Key(q) & !Cell(W,O) ? Move(W) :(Init)
  | Key(d) & !Cell(E,O) ? Move(E) :(Init)
  | Key(b) & Cell(F,J) ? Move(F) : (Init)
  | Key(r) ? Hit(F) : (Init)
}

PlayerBoat(Init){
  * (Init):
  | Key(d) & Key(z) ? Move(NE) :(Init)
  | Key(d) & Key(s) ? Move(SE) :(Init)
  | Key(q) & Key(z) ? Move(NW) :(Init)
  | Key(q) & Key(s) ? Move(SW) :(Init)
  | Key(z) ? Move(N) :(Init)
  | Key(s) ? Move(S) :(Init)
  | Key(q) ? Move(W) :(Init)
  | Key(d) ? Move(E) :(Init)
}

Player2(Init){
  * (Init):
  | Key(FR) & Key(FU) & !Cell(NE,O)? Move(NE) :(Init)
  | Key(FR) & Key(FD) & !Cell(SE,O)? Move(SE) :(Init)
  | Key(FL) & Key(FU) & !Cell(NW,O)? Move(NW) :(Init)
  | Key(FL) & Key(FD) & !Cell(SW,O)? Move(SW) :(Init)
  | Key(FU) & !Cell(N,O) ? Move(N) :(Init)
  | Key(FD) & !Cell(S,O)? Move(S) :(Init)
  | Key(FL) & !Cell(W,O)? Move(W) :(Init)
  | Key(FR) & !Cell(E,O) ? Move(E) :(Init)
}


Crab(Init){
 * (Init) :
 | !GotPower ? : ()
 | Closest ? : (Moving)
 | True ? : (Init)
 * (Moving) :
 | Cell(F,A) ? Hit : (Init)
 | !Cell(F,V) ? Move(O) : (Init)
 | True ? Move(F) : (Init)
 * ()
}

CrabKing(Init){
 * (Init) :
 | !GotPower ? : ()
 | Closest ? : (Spawn)
 | True ? : (Init)
 * (Spawn)
 | GotStuff ? Egg : (Moving)
 | True ? : (Moving)
 * (Moving) :
 | Cell(F,A) ? Hit : (Moving)
 | !Cell(F,V) ? Move(O) : (Init)
 | True ? Move(F) : (Init)
 * ()
}


CrabsLair(Init){
 * (Init) :
 	| Closest ? : (Spawn)
 	| True ? : (Init)
 * (Spawn) :
 	| GotStuff ? Egg : (Init)
 	| !GotPower ? : (Dead)
 	| True ? : (Init)
 * (Dead)
 }

 CannonBall(Init){
  * (Init) :
  | GotPower ? Move(N) : (Init)
  | True ? : ()
  * ()
 }
 
 RedCross(Init){
  * (Init) :
  | GotPower ? Egg : (Init)
  | True ? : ()
  * ()
 }

Ship(Init){
 * (Init) :
 | !GotPower ? Pop : ()
 | Closest(A) ? Hit : (Init)
 | Closest(V) ? Move : (Init)
 | True ? : (Init)
 * ()
}

Bonus(Init){
 * (Init) :
 | Cell(H,T) ? Power(T) : ()
 | True ? : (Init)
 * ()
}

Rhum(Init){
 * (Init) :
 | Cell(H,T) ? Power(T) : ()
 | True ? : (Init)
 * ()
}

Cloud(Init){
  * (Init) :
  | Cell(H, T) ? : ()
  | True ? : (Init)
  * ()
}
