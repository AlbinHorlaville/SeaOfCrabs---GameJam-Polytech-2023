Philosopher(Think){
  * (Think)
}

Mine(Banzai){
  * (Banzai)
  | Cell(F,E) ? Explode  :()
  | True ?               :(Banzai)
  * ()
}

Poule(Pondre){
  * (Pondre)
  | Cell(F,V) ? Egg(F)  :(Couver)

  * (Couver)
  | Cell(F,T) ? Move    :(Attendre)

  * (Attendre)
  | Cell(H,V) ?          :(Pondre)
}

Fire(Forward){
 * (Forward)
 | Cell(F,V) ? Move(F)    :(Copy)
 | Cell(F,O) ? Explode(H) :()
 | True      ?            :()

 * (Copy)
 | Cell(F,O) ? Explode(H) :()
 | Cell(B,V) ? Egg(B)     :(Forward)
}

Egyptologue(Explore){
 * (Explore)
 | Cell(H,C) ?          :()
 | Cell(F,V) ? Move(F)  :(Paint)
 | Cell(L,V) ? Turn(L)  :(Explore)
 | Cell(R,V) ? Turn(R)  :(Explore)
 | Cell(B,V) ? Turn(B)  :(Explore)

 * (Paint): True ? Pop(B) :(Explore)
}

PopOrWizz1(Init){
  * (Init): True ? 49%Pop / 49% Wizz / Power :(Init)
}

PopOrWizz2(State1){
  * (State1): True ? Pop  :(_)
  * (State2): True ? Wizz :(_)
}

Fourmi(Init){
 * (Init):
 | Cell(F,C) ? Move(F) :(Init)
 | Cell(R,C) ? Turn(R) :(Init)
 | Cell(L,C) ? Turn(L) :(Init)
 | Cell(F,V) ? Move    :(Init)
}

Blocker(Go){
* (Go):
    | Cell(F,V) ? Move :(Go)
    | True ?           :(Block)
* (Block)
}

Escape(Init){
* (Init):
  | Cell(N,V) & Cell(S,V) & Cell(E,V) & Cell(O,V) ? :(Init)
  | Cell(F,V) ? Move(F) :(Init)
  | Cell(L,V) ? Turn(L) :(Init)
  | Cell(R,V) ? Turn(R) :(Init)
  | Cell(B,V) ? Move(B) :(Init)
}

Player(Init){
  * (Init):
  | Key(FR) & Key(FU) & !Cell(NE,O) ? Move(NE) :(Init)
  | Key(FR) & Key(FD) & !Cell(SE,O) ? Move(SE) :(Init)
  | Key(FL) & Key(FU) & !Cell(NW,O) ? Move(NW) :(Init)
  | Key(FL) & Key(FD) & !Cell(SW,O) ? Move(SW) :(Init)
  | Key(FU) & !Cell(N,O) ? Move(N) :(Init)
  | Key(FD) & !Cell(S,O) ? Move(S) :(Init)
  | Key(FL) & !Cell(W,O) ? Move(W) :(Init)
  | Key(FR) & !Cell(E,O) ? Move(E) :(Init)

}
